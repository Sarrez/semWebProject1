<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="584.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="1090.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs><marker id="arrowHead-16776961" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(0,0,255)"/></marker></defs><g id="displayBean" transform="matrix(1.096847778945153,0.0,0.0,1.096847778945153,-52.7820395251083,21.169452259819764)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc00011080035006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7fa28a2800a28a2800a28a2800a28a4dcbebcfa0a005ae7a6f104cea3c9856339e496dd91f956fee27a29fc78ae2474a89b68d29c53dce86c75a6b9b98adde000be72e1bd013d31ed5af5ca691ff216b7fab7fe826baba706dad455124ec828a28aa20cd935570dfbab6dcbeacf83fc8d5bb7bb4b866555752067e6c563d5bb0cf9cd8ce36f38ae2a35e739a8b379d34a3746a138eb4dde3b73f4a68c67f873efd69ff37b577180996ecbf99a007e7738f6c0c52fcded4837f39db4006c1df9faf34ee949f37b51f37b5002d72f35d69a0af9360cc39cef72bf4c609f7ae9fe6f6ae2074159d47635a6af736f4d9f4f7bb884768f15c1ce0eec81c1f7f4f6addae5348ff90b5bfd5bff004135d5d107744d456614514559052fecc8bfe7a4bf98ff000a9aded12dd9995989231f362a7a2a153845dd229c9bdd875a6ec1db8fa53a8ab246e1bb37e62805f9dca3db0734ea2801bbc77e3eb4e073d28a4daa79c73eb400b5cc4b1e911a82935c4873d178e3f115d2ed23a31fc79ae2474a8a8ec6b4d5ee6e69d1e99f6b85e09e63372551c7b1ce78f4cf7adcae5348ff0090b5bfd5bff4135d5d107744d4566145145590145145001451450014514500145145001587ff0008effd3d7fe43ffebd1452693dc6a4d6c4d67a2fd96ee39fed1bf667e5d98ce411ebef5ad45142496c0db7b8514514c47fffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(245,224,171)" height="500.0" id="http://www.w3.org/2002/07/owl#Thing" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.272,0.0,0.0,0.272,32.053571428571445,193.15000000000003)" visibility="visible" width="500.0"><transform height="0.272" scaleX="32.053571428571445" scaleY="193.15000000000003" width="0.0" x="0.272" y="0.0"/><focus>false</focus><title>owl:Thing (Primitive Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.272,0.0,0.0,0.272,32.053571428571445,193.15000000000003)" x="35.0" y="27.6015625">owl:Thing<title>owl:Thing (Primitive Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Pokemon.owl#Type" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,364.2464285714286)" visibility="visible" width="500.0"><transform height="0.272" scaleX="765.4607142857144" scaleY="364.2464285714286" width="0.0" x="0.272" y="0.0"/><focus>false</focus><title>Type (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,364.2464285714286)" x="22.0" y="27.6015625">Type<title>Type (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Pokemon.owl#Pokemon" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,193.15000000000003)" visibility="visible" width="500.0"><transform height="0.272" scaleX="765.4607142857144" scaleY="193.15000000000003" width="0.0" x="0.272" y="0.0"/><focus>false</focus><title>Pokemon (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,193.15000000000003)" x="34.0" y="27.6015625">Pokemon<title>Pokemon (RDFS Class)</title></text><rect fill="rgb(219,193,181)" height="500.0" id="http://www.owl-ontologies.com/Pokemon.owl#Ability" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="15.0" ry="15.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,22.053571428571388)" visibility="visible" width="500.0"><transform height="0.272" scaleX="765.4607142857144" scaleY="22.053571428571388" width="0.0" x="0.272" y="0.0"/><focus>false</focus><title>Ability (RDFS Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.272,0.0,0.0,0.272,765.4607142857144,22.053571428571388)" x="25.0" y="27.6015625">Ability<title>Ability (RDFS Class)</title></text></g><g id="arcs"><line marker-end="url(#arrowHead-16776961)" onmousemove="mousemoveHandler(evt)" stroke="rgb(0,0,255)" stroke-width="1" visibility="visible" x1="168.05357142857144" x2="765.4607142857144" y1="245.28629147715654" y2="105.91727995141488"><title>has subclass: "owl:Thing"  to  "Ability"</title></line><line marker-end="url(#arrowHead-16776961)" onmousemove="mousemoveHandler(evt)" stroke="rgb(0,0,255)" stroke-width="1" visibility="visible" x1="168.05357142857144" x2="765.4607142857144" y1="261.15000000000003" y2="261.15000000000003"><title>has subclass: "owl:Thing"  to  "Pokemon"</title></line><line marker-end="url(#arrowHead-16776961)" onmousemove="mousemoveHandler(evt)" stroke="rgb(0,0,255)" stroke-width="1" visibility="visible" x1="168.05357142857144" x2="765.4607142857144" y1="277.0137085228435" y2="416.3827200485851"><title>has subclass: "owl:Thing"  to  "Type"</title></line></g></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">George</text><text name="prjName">pokemon</text><text name="timeStamp">Mon, 05 Dec 2016 18:18:13 +0200</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.096847778945154</text></g><text name="cprels"/><text name="focusedNodeID">-1</text><text height="532.4348658130459" name="screenCoord" width="993.7568557127056" x="48.121572143647136" y="-19.300264509063044"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String|Enumeration|Logical Operation|Restriction|Individual</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String|does_double_damage_to|does_double_damage_to (Domain&gt;Range)|does_double_damage_to (Necessary and Sufficient)|does_double_damage_to (Necessary)|has instance</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String|Enumeration|Logical Operation|Restriction|Individual</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String|does_double_damage_to|does_double_damage_to (Necessary and Sufficient)|does_double_damage_to (Necessary)|does_double_damage_to (Domain&gt;Range)</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>